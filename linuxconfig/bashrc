#Initialize Journal Environment variables, (file directories)
source /home/ezra/Journal/BackEnd/BashScripts/InitializeEnvVars.sh

#Navigation aliases
alias bashrc="vim ~/GithubDrive/linuxconfig/bashrc"
alias vimrc="cd ~/GithubDrive/vimrc/"
alias liconf="cd ~/GithubDrive/linuxconfig/"
alias tojrnl="cd ${JournalDriveDir}"
alias tojrnldev="cd ~/Journal/BackEnd/"
alias tojrnlsh="cd ~/Journal/BackEnd/BashScripts/"
alias cdWorkDir="cd ~/Journal/BackEnd/CRewrite"

#Journal aliases
alias newentry="~/Journal/BackEnd/BashScripts/NewEntry.sh"
alias compile="source ~/Journal/BackEnd/BashScripts/FullCompileScript.sh"
alias save="~/Journal/BackEnd/BashScripts/Save.sh"
alias editentry="~/Journal/BackEnd/BashScripts/EditEntry.sh"
alias testnewentry="~/Journal/BackEnd/BashScripts/TestNewEntry.sh"
alias testeditentry="~/Journal/BackEnd/BashScripts/TestEditEntry.sh"

#Command aliases
#file manager
alias ff="vifm"
alias vim="nvim"
alias x="exit"
alias shutdown="~/GithubDrive/linuxconfig/bashscripts/Shutdown.sh"
alias reboot="~/GithubDrive/linuxconfig/bashscripts/Reboot.sh"
alias rr="./run.sh"
alias rr2="./run2.sh"
alias untargz="tar -zxvf"
alias untar="tar -xvf"
alias targz="tar -czvf"
alias tarxy="tar -cJf"
alias sauce="source ~/.bashrc"
alias mkx="chmod +x"

#Keybind aliases
alias lvkeys="~/GithubDrive/linuxconfig/bashscripts/LeetVimKeyBindings.sh"
alias stdkeys="~/GithubDrive/linuxconfig/bashscripts/StandardKeyBindings.sh"
#Navigation aliases
alias bashrc="vim ~/GithubDrive/linuxconfig/bashrc"
alias vimrc="cd ~/GithubDrive/vimrc/"
alias liconf="cd ~/GithubDrive/linuxconfig/"
alias tojrnl="cd ${JournalDriveDir}"
alias tojrnldev="cd ~/Journal/BackEnd/"
alias tojrnlsh="cd ~/Journal/BackEnd/BashScripts/"

#Function from vifm wiki so shell directory is same as vifm
#directory upon exit. Isn't called directly by vifm, but accesses
#a file created by vifm, which is told to do so by mapping in vifmrc
vifm()
{
    if [ -f ~/.config/vifm/lastdir ]; then
        rm ~/.config/vifm/lastdir
    fi
    # "command" prevents recursive call
    command vifm "$@"
    if [ -f ~/.config/vifm/lastdir ]; then
      #Must use quotes and not apostrophes to handle directories with spaces
        cd "$(cat ~/.config/vifm/lastdir)"
    fi
}


if [ "${StartTermWithVifm}" = "true" ]
then
   vifm
fi
export StartTermWithVifm="false"
neofetch
